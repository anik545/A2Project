1.
Database with teacher/student
http://stackoverflow.com/questions/15871391/implementing-flask-login-with-multiple-user-classes
Separate teachers and students polymorphic identity
Maybe links table --> LINKS(StudentID,TeacherID)
teacher and student inherit from user
each has teacher id or student id field
links table has links
teacher class subclassing from user, teacher code field extra
links table, many to many intermediate, teacher_id, student_id.


2.
finish account page with sidebar (~done)
fill all boxes on page

3.
make teacher-student links system (from form on account page)

4.
restrict account page view depending on links and role (teacher/student)

5.
Implement setting/checking of tasks
teacher has many tasks, task has one teacher.
student has many tasks, task has one student
Maybe TASK(Task_ID,Student_ID,Teacher_ID,Task_number,date_due,completed,mark)
---> Just check is there is a mark in students history (after set date) to see if task is completed, no task table needed.

6.
make help page(s), instructions on loci plotter (maybe mod/arg buttons)

7.
make navbar for whole site
